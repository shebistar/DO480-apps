- name: Get K8S_AUTH_TOKEN with kubeadmin login
  hosts: localhost
  gather_facts: false
  module_defaults:
    group/community.okd.okd:
      host: https://api.cl-103.k8sop-dev.system-a.local:6443
      ca_cert: ca.pem
      validate_certs: false

  tasks:
    - name: Read kubeadmin password from file
      shell: cat /mnt/data/workspaces/workspace_clusters/dev/cl-103/auth/kubeadmin-password
      register: kubeadmin_password_content
      changed_when: false

    - name: Set kubeadmin_password variable
      set_fact:
        kubeadmin_password: "{{ kubeadmin_password_content.stdout }}"
      no_log: true

    - name: Get K8S_AUTH_TOKEN
      community.okd.openshift_auth:
        username: kubeadmin
        password: "{{ kubeadmin_password }}"
        validate_certs: false
      register: k8s_auth_token

- name: Create htpasswd identity provider for OKD
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Generate passwords
      set_fact:
        localadmin_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,length=16') }}"
      no_log: true

    - name: Add localadmin to a password file and ensure permissions are set
      community.general.htpasswd:
        path: /tmp/htpasswd_file
        name: localadmin
        password: "{{ localadmin_password }}"
        mode: 0640

    - name: Create htpasswd secret payload YAML file
      copy:
        content: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: htpasswd-secret
            namespace: openshift-config
          stringData:
            htpasswd: "{{ lookup('file', '/tmp/htpasswd_file') }}"
        dest: "/tmp/htpasswd_secret_payload.yaml"

    - name: Apply htpasswd secret from YAML
      kubernetes.core.k8s:
        src: /tmp/htpasswd_secret_payload.yaml
        state: present
      register: secret_result

    - name: Check if htpasswd secret was applied
      debug:
        var: secret_result

    - name: Create identity provider payload YAML file
      copy:
        content: |
          apiVersion: config.openshift.io/v1
          kind: OAuth
          metadata:
            name: cluster
          spec:
            identityProviders:
            - name: LocalAuth
              mappingMethod: claim
              type: HTPasswd
              htpasswd:
                fileData:
                  name: htpasswd-secret
            - ldap:
                attributes:
                  email:
                  - mail
                  id:
                  - sAMAccountName
                  name:
                  - cn
                  preferredUsername:
                  - sAMAccountName
                bindDN: ZA-SVC-OCP-REF
                bindPassword:
                  name: ldap-secret
                ca:
                  name: ca-bundle
                insecure: false
                url: ldaps://ad-ldaptest.system-a.local:636/DC=system-a,DC=local?sAMAccountName?sub?(&(objectclass=person)(|(memberOf:1.2.840.113556.1.4.1941:=CN=SI-LS-ADM-OPENSHIFT-LOGIN,OU=Funktionen,OU=Gruppen,OU=Administration,OU=Signal-Iduna,DC=system-a,DC=local)))
              mappingMethod: claim
              name: ldapidp
              type: LDAP
        dest: "/tmp/identity_provider_payload.yaml"

    - name: Apply identity provider from YAML
      kubernetes.core.k8s:
        src: /tmp/identity_provider_payload.yaml
        state: present
      register: identity_provider_result

    - name: Check if identity provider configuration was applied
      debug:
        var: identity_provider_result

    - name: Create cluster-admin role binding for localadmin payload YAML file
      copy:
        content: |
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: localadmin-cluster-admin
          namespace: default
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
            - kind: User
              apiGroup: rbac.authorization.k8s.io
              name: localadmin
        dest: "/tmp/cluster_role_binding_payload_localadmin.yaml"

    - name: Apply Cluster Role Binding from YAML
      kubernetes.core.k8s:
        src: /tmp/cluster_role_binding_payload_localadmin.yaml
        state: present
      register: cluster_role_binding_localadmin_result

    - name: Check if identity provider configuration was applied
      debug:
        var: cluster_role_binding_localadmin_result

    - name: Store the generated localadmin password in a file
      copy:
        content: "{{ localadmin_password }}"
        dest: "/mnt/data/workspaces/workspace_clusters/dev/cl-103/auth/localadmin-password"

    - name: Display generated passwords
      debug:
        msg: "Generated passwords: localadmin={{ localadmin_password }}"
