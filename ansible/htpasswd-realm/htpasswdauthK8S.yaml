---
- name: Create htpasswd identity provider
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Generate passwords
      vars:
        localadmin_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,length=16') }}"
        developer_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,length=16') }}"
      set_fact:
        localadmin_password_hash: "{{ localadmin_password | password_hash('sha512', 'mysecretsalt') }}"
        developer_password_hash: "{{ developer_password | password_hash('sha512', 'mysecretsalt') }}"
      no_log: true

    - name: Create htpasswd file
      lineinfile:
        path: /path/to/htpasswd_file
        line: "{{ item.username }}:{{ item.password }}"
        create: yes
        mode: '0600'
      with_items:
        - { username: 'localadmin', password: "{{ localadmin_password_hash }}" }
        - { username: 'developer', password: "{{ developer_password_hash }}" }

    - name: Create htpasswd secret
      kubernetes.core_v1.secret:
        name: htpasswd-secret
        namespace: your_namespace
        data:
          htpasswd: "{{ lookup('file', '/path/to/htpasswd_file') }}"
      register: secret_result

    - name: Create identity provider
      kubernetes.apiextensions_v1beta1.customresourcedefinition:
        name: identityproviders.config.openshift.io
        api_version: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        definition: |
          apiVersion: config.openshift.io/v1
          kind: OAuth
          identityProviders:
            - name: htpasswd_provider
              mappingMethod: claim
              type: HTPasswd
              htpasswd:
                fileData:
                  name: htpasswd-secret
                  key: htpasswd
      register: crd_result

    - name: Wait for the identity provider CRD to be established
      uri:
        url: "https://127.0.0.1:6443/apis/config.openshift.io/v1/oauths"
        method: GET
        validate_certs: false
        headers:
          Authorization: "Bearer {{ lookup('env', 'K8S_AUTH_TOKEN') }}"
        return_content: yes
      register: crd_response
      until: crd_response.status == 200
      retries: 10
      delay: 5

    - name: Create cluster-admin role binding for localadmin
      kubernetes.rbac_v1.clusterrolebinding:
        name: localadmin-cluster-admin
        namespace: your_namespace
        role_ref:
          api_group: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin
        subjects:
          - kind: User
            name: localadmin

    - name: Create edit role binding for developer
      kubernetes.rbac_v1.rolebinding:
        name: developer-edit
        namespace: your_namespace
        role_ref:
          api_group: rbac.authorization.k8s.io
          kind: Role
          name: edit
        subjects:
          - kind: User
            name: developer

    - name: Display generated passwords
      debug:
        msg: "Generated passwords: localadmin={{ localadmin_password }} developer={{ developer_password }}"

