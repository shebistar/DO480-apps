---
#
#       |`o``\  ,
#       |_|-/ \_|__
#     _/..\-.\|   |
#______\""/`````(o)___
- name: Login to OpenShift cluster
  shell:
    cmd: oc login -u admin -p redhat {{ hub_cluster_host }}
  environment:
    KUBECONFIG: "{{ kubeconfig }}"

- name: Delete managed-cluster, even if it does not exists
  include_role:
    name: acm_dettach_cluster
  ignore_errors: True

- name: Delete MCH by default, even if it does not exists
  include_role:
    name: acm_remove_multiclusterhub
  ignore_errors: True

- name: Retrieve CSV Subscription version
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: "advanced-cluster-management"
    namespace: "{{ namespace }}"
  register: acm_subs
  ignore_errors: True

- name: Ensure ACM Subscription is absent
  k8s:
    state: absent
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: acm-operator-subscription
      spec:
        sourceNamespace: openshift-marketplace
        source: do480-catalog
        channel: "{{ channel }}"
        installPlanApproval: Automatic
        name: advanced-cluster-management
        namespace: "{{ namespace }}"

- name: Wait until no rcm controller is running before removing the subscriptions
  k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ namespace }}"
    name: rcm-controller
  register: rcm_controller_deployment
  retries: 30
  delay: 20
  until: rcm_controller_deployment.resources | length == 0

#- name: Wait until no pods are running before removing the namespace
#  k8s_info:
#    kind: Pod
#    namespace: "{{ namespace }}"
#  register: pod_list
#  retries: 30
#  delay: 20
#  until: pod_list.resources | length == 0


- name: Ensure ACM Namespace is absent
  k8s:
    name: "{{ namespace }}"
    api_version: v1
    kind: Namespace
    state: absent

- name: Ensure ACM OperatorGroup is absent
  k8s:
    state: absent
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: acm-operatorgroup
      spec:
        targetNamespaces:
        - "{{ namespace }}"


- name: Ensure ACM CSV is absent
  k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ acm_subs.resources[0].status.installedCSV }}"
    namespace: "{{ namespace }}"
  when: acm_subs.resources | length > 0
